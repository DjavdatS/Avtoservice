
&НаСервере
Процедура УслугиУслугаПриИзмененииНаСервере()
	Объект.ОбщаяСтоимость = Объект.Услуги.Итог("Сумма");
КонецПроцедуры

&НаКлиенте
Процедура УслугиУслугаПриИзменении(Элемент)
	
	УслугиУслугаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;
	Если ЗначениеЗаполнено(СтрокаТЧ.Услуга) Тогда
		ЦенаУслуги = ПолучитьСтоимостьУслуги(СтрокаТЧ.Услуга);
		СтрокаТЧ.Сумма = ЦенаУслуги * СтрокаТЧ.Количество;
	КонецЕсли;
	
	УслугиУслугаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтоимостьУслуги(Услуга)
	УслугаОбъект = Справочники.Услуги.НайтиПоНаименованию(Услуга);
	Если НЕ ЗначениеЗаполнено(УслугаОбъект) Тогда
		Возврат 0;
	КонецЕсли;
	
	Возврат УслугаОбъект.Стоимость;
КонецФункции

&НаСервере
Процедура ЗаписатьсяНаСервере()
	
	ЗаписьКлиента = Документы.ЗаписьКлиента.СоздатьДокумент();
	ЗаписьКлиента.Дата = НачалоМинуты(Объект.ДатаЗаписи);
	ЗаписьКлиента.Сотрудник = Объект.Сотрудник;
	
	МассивУслуг = Новый Массив;
	Для Каждого Услуга Из Объект.Услуги Цикл
		СтрокаУслуги = ЗаписьКлиента.Услуги.Добавить();
		СтрокаУслуги.Услуга = Услуга.Услуга;
		СтрокаУслуги.Стоимость = Услуга.Сумма;
		МассивУслуг.Добавить(Услуга.Услуга);
	КонецЦикла;
	СписокУслуг = СтрСоединить(МассивУслуг, ", ");
	
	//Создаем JSON
	СтруктураРеквизитовДокумента = Новый Структура;
	СтруктураРеквизитовДокумента.Вставить("ДатаЗаписи", Объект.ДатаЗаписи);
	СтруктураРеквизитовДокумента.Вставить("Сотрудник", Строка(Объект.Сотрудник));
	СтруктураРеквизитовДокумента.Вставить("GUIDПользователя", ПараметрыСеанса.ТекущийПользователь.ВнешнийGUID);
	СтруктураРеквизитовДокумента.Вставить("Стоимость", Объект.ОбщаяСтоимость);
	
	МассивУслугБазы = Новый Массив;
	Для Каждого Услуга Из Объект.Услуги Цикл
		УслугаБазы = Новый Структура;
		УслугаБазы.Вставить("Услуга", Строка(Услуга.Услуга));
		УслугаБазы.Вставить("Цена", ПолучитьСтоимостьУслуги(Услуга.Услуга));
		УслугаБазы.Вставить("Количество", Услуга.Количество);
		УслугаБазы.Вставить("Стоимость", Услуга.Сумма);
		
		МассивУслугБазы.Добавить(УслугаБазы);
	КонецЦикла;
	
	СтруктураРеквизитовДокумента.Вставить("МассивУслугБазы", МассивУслугБазы);
	
	СтруктураРеквизитовДокументаJSON = ОбменСОсновнойБазой.ПолучитьТекстJSON(СтруктураРеквизитовДокумента);
	
	ДокументУспешноОтправлен = ОбменСОсновнойБазой.ОтправитьЗаписьВЦентральнуюБазу(СтруктураРеквизитовДокументаJSON);
	Если ДокументУспешноОтправлен Тогда
		
		ЗаписьКлиента.Записать(РежимЗаписиДокумента.Проведение);
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = СтрШаблон("Вы записаны на услуги: %1 к мастеру %2 на дату %3",
		СписокУслуг, Объект.Сотрудник, Формат(Объект.ДатаЗаписи, "ДФ='dd.MM.yyyy HH:mm'"));
		СообщениеПользователю.Сообщить();
		
		Объект.ДатаЗаписи = '00010101';
		Объект.Сотрудник = Справочники.Сотрудники.ПустаяСсылка();
		Объект.Услуги.Очистить();
		Объект.ОбщаяСтоимость = 0;
		ДокументПроведен = Истина;
		
	Иначе
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не удалось отправить Запись!";
		СообщениеПользователю.Сообщить();
		ДокументПроведен = Ложь;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура Записаться(Команда)
	
	ЗаписатьсяНаСервере();
	
	Если ДокументПроведен Тогда
		ОткрытьФорму("Документ.ЗаписьКлиента.ФормаСписка");
	КонецЕсли;
	
КонецПроцедуры

