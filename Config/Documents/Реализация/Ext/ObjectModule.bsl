
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаряд") Тогда
		Автомобиль = ДанныеЗаполнения.Автомобиль;
		Контрагент = ДанныеЗаполнения.Клиент;
		Комментарий = СтрШаблон("Введен на основании: Заказ-наряд № %1 от %2", ДанныеЗаполнения.Номер, ДанныеЗаполнения.Дата);
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		Для Каждого ТекСтрокаМатериалыЗаказчика Из ДанныеЗаполнения.МатериалыЗаказчика Цикл
			НоваяСтрока = МатериалыЗаказчика.Добавить();
			НоваяСтрока.Количество = ТекСтрокаМатериалыЗаказчика.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаМатериалыЗаказчика.Номенклатура;
			НоваяСтрока.СостояниеМатериала = ТекСтрокаМатериалыЗаказчика.СостояниеМатериала;
		КонецЦикла;
		Для Каждого ТекСтрокаУслуги Из ДанныеЗаполнения.Услуги Цикл
			НоваяСтрока = Услуги.Добавить();
			НоваяСтрока.Количество = ТекСтрокаУслуги.Количество;
			НоваяСтрока.Сумма = ТекСтрокаУслуги.Сумма;
			НоваяСтрока.Услуга = ТекСтрокаУслуги.Услуга;
			НоваяСтрока.Цена = ТекСтрокаУслуги.Цена;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.ЗаказыКлиентов.Записывать = Истина;
	Движения.Продажи.Записывать = Истина;
	Движения.УчетЗатрат.Записывать = Истина;
	Движения.МатериалыЗаказчиков.Записывать = Истина;
	Движения.Хозрасчетный.Записывать = Истина;
	
	Движения.ТоварыНаСкладах.Записать();
	Движения.Продажи.Записать();
	Движения.УчетЗатрат.Записать();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТовары.Ссылка.Склад КАК Склад,
	|	СУММА(РеализацияТовары.Количество) КАК Количество,
	|	СУММА(РеализацияТовары.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.Реализация.Товары КАК РеализацияТовары
	|ГДЕ
	|	РеализацияТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТовары.Номенклатура,
	|	РеализацияТовары.Ссылка.Склад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияУслуги.Услуга,
	|	NULL,
	|	СУММА(РеализацияУслуги.Количество),
	|	СУММА(РеализацияУслуги.Сумма)
	|ИЗ
	|	Документ.Реализация.Услуги КАК РеализацияУслуги
	|ГДЕ
	|	РеализацияУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияУслуги.Услуга
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВТ_Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВТ_Товары.Номенклатура.Представление КАК НоменклатураПредставление,
	|	ВТ_Товары.Количество КАК КоличествоВДокументе,
	|	ВТ_Товары.Сумма КАК СуммаВДокументе,
	|	ТоварыНаСкладахОстатки.СрокГодности КАК СрокГодности,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ВТ_Товары.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ВТ_Товары.Номенклатура.СчетБухгалтерскогоУчета КАК СчетБухгалтерскогоУчета
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				&МоментВремени,
	|				(Номенклатура, Склад) В
	|					(ВЫБРАТЬ
	|						ВТ_Товары.Номенклатура,
	|						ВТ_Товары.Склад
	|					ИЗ
	|						ВТ_Товары КАК ВТ_Товары)) КАК ТоварыНаСкладахОстатки
	|		ПО ВТ_Товары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	СрокГодности
	|ИТОГИ
	|	МАКСИМУМ(КоличествоВДокументе),
	|	МАКСИМУМ(СуммаВДокументе),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Номенклатура";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Если ВыборкаНоменклатура.ЭтоТовар Тогда
			СтоимостьОбщая = 0;
			
			Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток;
			Если Превышение > 0 Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон("Превышение остатка по номенклатуре ""%1""  в количестве ""%2""", ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
				Сообщение.Сообщить();
				Отказ = Истина;
			КонецЕсли;
			
			Если Отказ Тогда
				Продолжить;
			КонецЕсли;
			
			ОсталостСписать = ВыборкаНоменклатура.КоличествоВДокументе;
			
			ВыборкаДетальные = ВыборкаНоменклатура.Выбрать();
			Пока ВыборкаДетальные.Следующий() И ОсталостСписать > 0 И ВыборкаДетальные.КоличествоОстаток > 0 Цикл
				Списываем = Мин(ВыборкаДетальные.КоличествоОстаток, ОсталостСписать);
				
				Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальные.Номенклатура;
				Движение.Склад = Склад;
				Движение.СрокГодности = ВыборкаДетальные.СрокГодности;
				Движение.Количество = Списываем;
				Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда
					СуммаСписания = ВыборкаДетальные.СуммаОстаток;
				Иначе 
					СуммаСписания = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
				КонецЕсли;
				Движение.Сумма = СуммаСписания;
				
				ОсталостСписать = ОсталостСписать - Списываем;
				СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма;
				
				//Проводка по списанию товаров и материалов Дт90 Кт10/41
				Движение = Движения.Хозрасчетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи;
				Движение.СчетКт = ВыборкаНоменклатура.СчетБухгалтерскогоУчета;
				БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, ВыборкаДетальные.Номенклатура); 
				Движение.Период = Дата;
				Движение.Сумма = СуммаСписания;
				Движение.Содержание = "Списана себестоимость товарно-материальных ценностей";
				
			КонецЦикла;
			
			Движение = Движения.УчетЗатрат.Добавить();
			Движение.Период = Дата;
			Движение.СтатьяЗатрат = ВыборкаНоменклатура.СтатьяЗатрат;
			Движение.Сумма = СтоимостьОбщая;
			
		КонецЕсли;
		
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		Движение.Сотрудник = Сотрудник;
		Движение.Контрагент = Контрагент;
		Движение.Количество = ВыборкаНоменклатура.КоличествоВДокументе;
		Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		Движение = Движения.ЗаказыКлиентов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Клиент = ЭтотОбъект.Контрагент;
		Движение.ЗаказКлиента = ЭтотОбъект.ДокументОснование;
		Движение.Сумма = ЭтотОбъект.Услуги.Итог("Сумма");
	КонецЕсли;
	
	Для Каждого ТекСтрокаМатериалыЗаказчика Из МатериалыЗаказчика Цикл
		Движение = Движения.МатериалыЗаказчиков.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаМатериалыЗаказчика.Номенклатура;
		Движение.Заказчик = Контрагент;
		Движение.Склад = Склад;
		Движение.Количество = ТекСтрокаМатериалыЗаказчика.Количество;
	КонецЦикла;
	
	//Проводка по отражению выручки Дт62 Кт90
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Продажи;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, Контрагент);
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = "Отражена выручка от реализации товаров и услуг";
	
КонецПроцедуры
