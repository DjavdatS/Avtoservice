
Функция getUserGET(Запрос)
	
	Логин = Строка(Запрос.ПараметрыЗапроса.Получить("username"));
	
	ЗапросПользователи = Новый Запрос;
	ЗапросПользователи.Текст = 
	"ВЫБРАТЬ
	|    УНИКАЛЬНЫЙИДЕНТИФИКАТОР(Пользователи.Ссылка) КАК Ссылка,
	|    Пользователи.Наименование КАК Наименование,
	|    Пользователи.Код КАК Код
	|ИЗ
	|    Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|    НЕ Пользователи.ПометкаУдаления
	|    И Пользователи.Наименование = &Наименование";
	ЗапросПользователи.УстановитьПараметр("Наименование", Логин);
	
	РезультатЗапроса = ЗапросПользователи.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если НЕ Выборка.Следующий() Тогда
		Ответ = Новый HTTPСервисОтвет(401);
		Ответ.УстановитьТелоИзСтроки("Пользователь не найден!");
		Возврат Ответ;
	КонецЕсли;
	
	ДанныеПользователя = Новый Структура;
	ДанныеПользователя.Вставить("quid", Строка(Выборка.Ссылка));
	ДанныеПользователя.Вставить("name", Строка(Выборка.Наименование));
	ДанныеПользователя.Вставить("code", Строка(Выборка.Код));
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, ДанныеПользователя);
	СтрокаОтвета = ЗаписьJSON.Закрыть();
	
	Ответ.УстановитьТелоИзСтроки(СтрокаОтвета);
	
	Возврат Ответ;
	
КонецФункции

Функция registerUserGET(Запрос)
	
	Логин = Строка(Запрос.ПараметрыЗапроса.Получить("username"));
	Телефон = Строка(Запрос.ПараметрыЗапроса.Получить("phone"));
	
	ЗапросПользователи = Новый Запрос;
	ЗапросПользователи.Текст =
	"ВЫБРАТЬ
	|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(Пользователи.Ссылка) КАК Ссылка,
	|	Пользователи.Наименование КАК Наименование,
	|	Пользователи.Код КАК Код
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	НЕ Пользователи.ПометкаУдаления
	|	И Пользователи.Наименование = &Наименование";
	ЗапросПользователи.УстановитьПараметр("Наименование", Логин);
	
	РезультатЗапроса = ЗапросПользователи.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		НовыйПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
		НовыйПользовательИБ.Имя = Логин;
		НовыйПользовательИБ.Роли.Добавить(Метаданные.Роли.ПолныеПрава);
		НовыйПользовательИБ.Записать();
		
		НовыйПользовательКонтрагент = Справочники.Контрагенты.СоздатьЭлемент();
		НовыйПользовательКонтрагент.Наименование = Логин;
		НовыйПользовательКонтрагент.КонтактныйТелефон = Телефон;
		НовыйПользовательКонтрагент.ТипКонтрагента = Перечисления.ТипыКонтрагентов.Покупатель;
		НовыйПользовательКонтрагент.Комментарий = "Контрагент зарегистрирован через мобильное приложение.";
		НовыйПользовательКонтрагент.Записать();
		
		НовыйПользователь = Справочники.Пользователи.СоздатьЭлемент();
		НовыйПользователь.Наименование = Логин;
		НовыйПользователь.Код = НовыйПользовательИБ.УникальныйИдентификатор;
		НовыйПользователь.Клиент = НовыйПользовательКонтрагент.Ссылка;
		НовыйПользователь.Записать();
		
		ДанныеПользователя = Новый Структура;
		ДанныеПользователя.Вставить("quid", Строка(Выборка.Ссылка));
		ДанныеПользователя.Вставить("name", Строка(Выборка.Наименование));
		ДанныеПользователя.Вставить("code", Строка(Выборка.Код));
		
		Ответ = Новый HTTPСервисОтвет(200);
		
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		ЗаписатьJSON(ЗаписьJSON, ДанныеПользователя);
		СтрокаОтвета = ЗаписьJSON.Закрыть();
		
		Ответ.УстановитьТелоИзСтроки(СтрокаОтвета);
		
		Возврат Ответ;
	
	Иначе 
		Ответ = Новый HTTPСервисОтвет(409);
		Ответ.УстановитьТелоИзСтроки("Пользователь с таким логином уже существует.");
		Возврат Ответ;
		
	КонецЕсли;
	
КонецФункции
